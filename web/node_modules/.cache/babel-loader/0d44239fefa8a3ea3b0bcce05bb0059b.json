{"ast":null,"code":"import _defineProperty from \"/home/osboxes/Documents/horariositam/web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/osboxes/Documents/horariositam/web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/osboxes/Documents/horariositam/web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/osboxes/Documents/horariositam/web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/osboxes/Documents/horariositam/web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/osboxes/Documents/horariositam/web/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/osboxes/Documents/horariositam/web/src/index.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport update from 'immutability-helper';\nimport { Root } from \"./layout/root\";\nimport { Login } from './app/components/login';\nimport { Calendar } from './app/components/calendar';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      isLoggedIn: 'init',\n      inputValue: {\n        cu: '',\n        pw: ''\n      },\n      remember: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.session();\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(e, val) {\n      if (e.target && e.target.type === 'checkbox') {\n        var valu;\n        if (e.target.checked) valu = true;else valu = false;\n        this.setState({\n          remember: valu\n        });\n      } else this.setState({\n        inputValue: update(this.state.inputValue, _defineProperty({}, val, {\n          $set: e\n        }))\n      });\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      this.setState({\n        isLoggedIn: 'init',\n        inputValue: {\n          cu: '',\n          pw: ''\n        }\n      }, function () {\n        window.location.replace(\"./\");\n        localStorage.removeItem('cu');\n      });\n    }\n  }, {\n    key: \"session\",\n    value: function session() {\n      var cachedId = localStorage.getItem('cu');\n\n      if (cachedId) {\n        console.log('sessioned');\n        this.setState({\n          isLoggedIn: cachedId\n        });\n      }\n    }\n  }, {\n    key: \"apiLogin\",\n    value: function apiLogin() {\n      this.setState({\n        isLoggedIn: 1,\n        inputValue: {\n          cu: '',\n          pw: ''\n        }\n      });\n      if (this.state.remember) localStorage.setItem('cu', 1);\n      /* var credentials = this.state.inputValue;\n      \n      api.leaderLogin(credentials)\n        .then((data) => {\n          if(data){\n            this.setState({\n              isLoggedIn: data.id_leader,\n              inputValue: {\n                cu: '',\n                pw: ''\n              }\n            });\n            if(this.state.remember)\n              localStorage.setItem('id_leader', data.id_leader); \n          }      \n          else\n            this.setState({\n              isLoggedIn: false\n            }); \n        }) */\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var logged = '';\n\n      if (this.state.isLoggedIn !== false && this.state.isLoggedIn !== 'init') {\n        logged = [React.createElement(Route, {\n          exact: true,\n          path: \"/\",\n          render: function render() {\n            return React.createElement(Calendar, {\n              isLoggedIn: _this2.state.isLoggedIn,\n              handleInputChange: function handleInputChange(e, val) {\n                _this2.handleInputChange(e, val);\n              },\n              apiLogin: _this2.apiLogin.bind(_this2),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 106\n              },\n              __self: this\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }), React.createElement(Route, {\n          path: \"/generador\",\n          render: function render() {\n            return React.createElement(Calendar, {\n              isLoggedIn: _this2.state.isLoggedIn,\n              handleInputChange: function handleInputChange(e, val) {\n                _this2.handleInputChange(e, val);\n              },\n              apiLogin: _this2.apiLogin.bind(_this2),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 107\n              },\n              __self: this\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        })];\n      } else if (this.state.isLoggedIn === false || this.state.isLoggedIn === 'init') {\n        logged = [React.createElement(Route, {\n          exact: true,\n          path: \"/\",\n          render: function render() {\n            return React.createElement(Login, {\n              isLoggedIn: _this2.state.isLoggedIn,\n              handleInputChange: function handleInputChange(e, val) {\n                _this2.handleInputChange(e, val);\n              },\n              apiLogin: _this2.apiLogin.bind(_this2),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 114\n              },\n              __self: this\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }), React.createElement(Route, {\n          path: \"/login\",\n          render: function render() {\n            return React.createElement(Login, {\n              isLoggedIn: _this2.state.isLoggedIn,\n              handleInputChange: function handleInputChange(e, val) {\n                _this2.handleInputChange(e, val);\n              },\n              apiLogin: _this2.apiLogin.bind(_this2),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 115\n              },\n              __self: this\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        })];\n      }\n\n      return React.createElement(BrowserRouter, {\n        basename: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Root, {\n        isLoggedIn: this.state.isLoggedIn,\n        logout: this.logout.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, logged)));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 133\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/osboxes/Documents/horariositam/web/src/index.js"],"names":["React","Component","ReactDOM","serviceWorker","BrowserRouter","Route","Switch","update","Root","Login","Calendar","App","props","state","isLoggedIn","inputValue","cu","pw","remember","session","e","val","target","type","valu","checked","setState","$set","window","location","replace","localStorage","removeItem","cachedId","getItem","console","log","setItem","logged","handleInputChange","apiLogin","bind","logout","render","document","getElementById","unregister"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport update from 'immutability-helper';\n\nimport {Root} from \"./layout/root\";\nimport {Login} from './app/components/login';\nimport {Calendar} from './app/components/calendar';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n  \n      this.state = {\n        isLoggedIn: 'init',\n        inputValue: {\n          cu: '',\n          pw: ''\n        },\n        remember: false\n      }\n    }\n  \n    componentDidMount() {\n      this.session();\n    }\n  \n    handleInputChange(e, val){\n      if(e.target && e.target.type === 'checkbox'){\n        var valu;\n        if(e.target.checked)\n          valu = true;\n        else\n          valu = false;\n        this.setState({\n          remember: valu\n        });\n      }\n      else\n        this.setState({\n          inputValue: update(this.state.inputValue, {[val]: {$set: e}})\n        });\n    }\n  \n    logout(){\n      this.setState({\n        isLoggedIn: 'init',\n        inputValue: {\n          cu: '',\n          pw: ''\n        }\n      }, () => {\n        window.location.replace(\"./\");\n        localStorage.removeItem('cu');\n      });\n    }\n  \n    session(){\n      const cachedId = localStorage.getItem('cu');\n      if (cachedId) {\n        console.log('sessioned')\n        this.setState({ isLoggedIn: cachedId });\n      }\n    }\n\n    apiLogin(){\n\n        this.setState({\n            isLoggedIn: 1,\n            inputValue: {\n              cu: '',\n              pw: ''\n            }\n          });\n          if(this.state.remember)\n            localStorage.setItem('cu', 1); \n\n        /* var credentials = this.state.inputValue;\n        \n        api.leaderLogin(credentials)\n          .then((data) => {\n            if(data){\n              this.setState({\n                isLoggedIn: data.id_leader,\n                inputValue: {\n                  cu: '',\n                  pw: ''\n                }\n              });\n              if(this.state.remember)\n                localStorage.setItem('id_leader', data.id_leader); \n            }      \n            else\n              this.setState({\n                isLoggedIn: false\n              }); \n          }) */\n      }\n\n    render() {\n        var logged = '';\n        if(this.state.isLoggedIn !== false && this.state.isLoggedIn !== 'init'){\n            logged = [\n                <Route exact path=\"/\" render={() => <Calendar isLoggedIn={this.state.isLoggedIn} handleInputChange={(e, val) => {this.handleInputChange(e, val)}} apiLogin={this.apiLogin.bind(this)}/>}/>,\n                <Route path=\"/generador\" render={() => <Calendar isLoggedIn={this.state.isLoggedIn} handleInputChange={(e, val) => {this.handleInputChange(e, val)}} apiLogin={this.apiLogin.bind(this)}/>}/>\n            ];\n        }\n        \n        \n        else if(this.state.isLoggedIn === false || this.state.isLoggedIn === 'init'){\n            logged = [\n                <Route exact path=\"/\" render={() => <Login isLoggedIn={this.state.isLoggedIn} handleInputChange={(e, val) => {this.handleInputChange(e, val)}} apiLogin={this.apiLogin.bind(this)}/>}/>,\n                <Route path=\"/login\" render={() => <Login isLoggedIn={this.state.isLoggedIn} handleInputChange={(e, val) => {this.handleInputChange(e, val)}} apiLogin={this.apiLogin.bind(this)}/>}/>\n            ];\n        }\n\n        return (\n            <BrowserRouter basename=\"/\">\n                <Root isLoggedIn={this.state.isLoggedIn} logout={this.logout.bind(this)}>\n                    <Switch>\n                        {logged}\n                    </Switch>\n                </Root>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}